/**
 * Root TypoScript template for the Deutsche International 14 Klassenvereinigung Site
 */

# Override the default root matcher to render a document node with a prototype of the same name
root {
	default {
		type = ${q(node).property('_nodeType')+ '.Document'}
		renderPath >
	}

	// Only render a specific layout for Page nodes
	layout {
		condition = ${q(node).is('[instanceof TYPO3.Neos.NodeTypes:Page]') && this.layout != null && this.layout != ''}
	}
}

prototype(Skail.Int14Ger:DefaultPage) < prototype(Page) {
#	htmlTag.attributes.class = 'no-js'
	bodyTag.attributes.class = 'w1170 headerstyle8'

	head {
		titleTag {
			@position = 'after characterSetMetaTag'
			content = Ttree.Plugin.Seo:RawPageTitle
		}

		metaData = TYPO3.TypoScript:Array {
			@position = 'after characterSetMetaTag'
			main = TYPO3.TypoScript:Template {
				templatePath = 'resource://Skail.Int14Ger/Private/Templates/Page/Default.html'
				sectionName = 'metadata'
			}
		}

		metaTags = Ttree.Plugin.Seo:MetaTags {
			@position = 'after metaData'
		}

		stylesheets.main = TYPO3.TypoScript:Template {
			templatePath = 'resource://Skail.Int14Ger/Private/Templates/Page/Default.html'
			sectionName = 'stylesheets'
		}

		javascripts {
			@position = 'end 1000'
			main = TYPO3.TypoScript:Template {
				templatePath = 'resource://Skail.Int14Ger/Private/Templates/Page/Default.html'
				sectionName = 'scripts'
			}
		}
	}

	body {
		templatePath = 'resource://Skail.Int14Ger/Private/Templates/Page/Default.html'
		sectionName = 'body'
		layout = ${q(node).property('layout') ? q(node).property('layout') : 'default'}
		parts {
			mainMenu = Menu {
				entryLevel = 1
				templatePath = 'resource://Skail.Int14Ger/Private/Templates/TypoScriptObjects/MainMenu.html'
				maximumLevels = 3
				filter = 'TYPO3.Neos:Document'
				attributes {
					id = 'main-nav'
					class = 'menu'
				}
				normal.attributes.class = ${item.subItems ? 'menu-item menu-item-has-children' : 'menu-item'}
				current.attributes.class = ${item.subItems ? 'menu-item current-menu-ancestor current_page_ancestor menu-item-has-children' : 'menu-item current-menu-ancestor current_page_ancestor'}
				active.attributes.class = ${item.subItems ? 'menu-item current-menu-ancestor current_page_ancestor menu-item-has-children' : 'menu-item current-menu-ancestor current_page_ancestor'}
			}

			pageHeader = TYPO3.TypoScript:Template {
				templatePath = 'resource://Skail.Int14Ger/Private/Templates/TypoScriptObjects/DefaultPageHeader.html'
				title = ${q(node).property('title')}
				breadcrumb = Skail.Int14Ger:BreadcrumbMenu
			}

			pageFooter = TYPO3.Neos:ContentCollection {
				nodePath = ${q(site).find('footer').property('_path')}
				collection = ${q(site).children('footer').children()}
			}
		}

		// These are your content areas, you can define as many as you want, just name them and the nodePath.
		content {
			// Default content section
			main = PrimaryContent {
				nodePath = 'main'
			}
		}

		homepage = ${site}

		javascripts.site = TYPO3.TypoScript:Template {
			templatePath = 'resource://Skail.Int14Ger/Private/Templates/Page/Default.html'
			sectionName = 'bodyScripts'
		}
	}
}

prototype(TYPO3.Neos.NodeTypes:Page.Document) < prototype(Skail.Int14Ger:DefaultPage)
prototype(Skail.Int14Ger:LandingPage.Document) < prototype(Skail.Int14Ger:DefaultPage) {
	body {
		// remove page header
		parts.pageHeader >

		content {
			stage = PrimaryContent {
				nodePath = 'stage'
			}
			stageOverlay = TYPO3.TypoScript:Template {
				templatePath = 'resource://Skail.Int14Ger/Private/Templates/TypoScriptObjects/StageOverlay.html'
				stageText = ${q(node).property('stageText')}
				stageLink = ${q(node).property('stageLink')}
				stageLinkText = ${q(node).property('stageLinkText')}
				showStageOverlay = ${q(node).property('showStageOverlay')}
			}
		}
	}
}
prototype(Skail.Int14Ger:DetailPage.Document) < prototype(Skail.Int14Ger:DefaultPage) {
	body {
		parts {
			pageHeader = TYPO3.TypoScript:Template {
				templatePath = 'resource://Skail.Int14Ger/Private/Templates/TypoScriptObjects/DetailPageHeader.html'
				attributes = TYPO3.TypoScript:Attributes {
					class = 'full-width dark-blue-bg page-heading position-left-top size-cover'
					style = TYPO3.Neos:ImageUri {
						asset = ${q(node).property('backgroundImage')}
						@process.backgroundImagePrefix = ${'background-image: url(' + value + ')'}
					}
				}
			}
		}
	}
}


default = TYPO3.Neos.NodeTypes:Page.Document
landingPage = Skail.Int14Ger:LandingPage.Document
detailPage = Skail.Int14Ger:DetailPage.Document

##################################
# Includes
##################################

include: NodeTypes/*
include: Plugins/*
include: Prototypes/*